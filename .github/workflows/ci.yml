name: Build Status
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  ci:
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      RUSTV: ${{ matrix.rust }}
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    runs-on: ${{ matrix.os }}
    name: ci

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust: [stable]

        include:
          - os: ubuntu-latest
            sccache-path: /home/runner/.cache/sccache
          - os: macos-latest
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache

        exclude:
          - os: macos-latest
            rust: stable
            make:
              name: Format Backend

        make:
          - name: Verify UI
            task: "verify-ui test-ui"

          - name: Resources
            task: "ui workspace"

          # The backend requires that the ui and the workspace are built. Make sure to
          # run this task only after those.
          - name: Verify Backend
            task: "check-backend test-backend"

          - name: Format Backend
            task: "format-backend"

    steps:
    - uses: actions/checkout@v2

    # Configure Hosts
    - name: Install packages (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: scripts/ci/ubuntu-install-packages
    - name: Install sccache (ubuntu-latest)
      if: matrix.os == 'ubuntu-latest'
      env:
        LINK: https://github.com/mozilla/sccache/releases/download
        SCCACHE_VERSION: 0.2.15
      run: |
        SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
        mkdir -p $HOME/.local/bin
        curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
        mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install sccache (macos-latest)
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install sccache

    # NodeJS
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install Node dependencies
      run: yarn install

    # Rust
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true
        components: rustfmt
    - name: Cache cargo registry
      uses: actions/cache@v2
      continue-on-error: false
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    - name: Save sccache
      uses: actions/cache@v2
      continue-on-error: false
      with:
        path: ${{ matrix.sccache-path }}
        key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
            ${{ runner.os }}-sccache-
    - name: Start sccache server
      run: sccache --start-server

    # Run tasks
    - name: ${{ matrix.make.name }}
      run: make ${{ matrix.make.task }}

    # Cleanup
    - name: Print sccache stats
      run: sccache --show-stats
    - name: Stop sccache server
      run: sccache --stop-server || true

