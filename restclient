# -*- restclient -*-

:api = localhost:40666
:headers = <<
Content-Type: application/json
#

:auth-remote-headers = <<
Authorization: Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtZUBleGFtcGxlLm9yZyIsImF1ZCI6InN5cmlhbi1hcmNoaXZlIiwiZXhwIjoxNTkxMzY0Njc1LCJuYmYiOjE1OTEzNjEwNzV9.8Y62irkdSb3gUlc8Uby8uFeR3gilRCTBUxwzMByDnVkwqkagOAHjrzz28w3bZEP3-7Rl67_q84RpVxDuI3rreQ
X-Forwarded-For: 192.168.2.5
#

###
# Ncube Host Configuration
###

# Query the global Ncube configuration.
GET http://:api/api
:headers

# Bootstrap Ncube.
POST http://:api/api
:headers

[{"name": "workspace_root", "value": "~/ncube"}]

# Update Ncube host configuration.
PUT http://:api/api
:headers

[{"name": "name", "value": "~/ncube"}]


###
# Account Management
###

# Login an account
POST http://:api/api/workspaces/syrian-archive/account
:headers

{
  "email": "me@example.org",
  "password": "new-pass"
}

# Update a password
PUT http://:api/api/workspaces/syrian-archive/account
:headers

{
  "email": "me@example.org",
  "password": "new-pass"
}

###
# Manage Workspaces
###

# Create a new workspace.
POST http://:api/api/workspaces
:headers

{
  "name": "Syrian Archive",
  "description": "This is a workspace.",
  "kind": "local",
  "database": "http"
}


# Link a new remote workspace
POST http://:api/api/workspaces
:headers

{
  "name": "Syrian Archive Remote",
  "description": "This is a workspace.",
  "kind": "remote",
  "endpoint": "https://example.org/workspaces/syrian-archive",
  "database": "http"
}

# List all workspaces.
GET http://:api/api/workspaces
:headers

# Show a single workspace.
GET http://:api/api/workspaces/syrian-archive
:headers

# Remove a single workspace.
DELETE http://:api/api/workspaces/syrian-archive
:headers

# Create a new workspace.
PUT http://:api/api/workspaces/syrian-archive
:headers

{
  "name": "Syrian Archivee",
  "description": "This is a workspace.",
  "kind": "local",
  "location": "~/path/to/workspace",
  "database": "sqlite"
}


###
# Manage sources
###

# Create a new source
POST http://:api/api/workspaces/syrian-archive/sources
:headers

{
  "type": "youtube_video",
  "term": "https://youtube.com/watch?v=123456",
  "annotations": [
    {"type": "tag", "term": "xyz"},
    {"type": "tag", "term": "zyx"}
  ]
}

# Create a source for a non existing workspace
POST http://:api/api/workspaces/does-not-exist/sources
:headers

{
  "type": "youtube_video",
  "term": "https://youtube.com/watch?v=123456",
  "annotations": [
    {"type": "tag", "term": "xyz"},
    {"type": "tag", "term": "zyx"}
  ]
}

# List all sources
GET http://:api/api/workspaces/syrian-archive/sources

# Delete a source
DELETE http://:api/api/workspaces/syrian-archive/sources/1

# Update an existing source
PUT http://:api/api/workspaces/syrian-archive/sources/1
:headers

{
  "type": "youtube_video",
  "term": "https://youtube.com/watch?v=654321",
  "annotations": [
    {"type": "tag", "term": "xyz"},
    {"type": "tag", "term": "zyx"}
  ]
}

###
# Manage source tags
###

# List all source tags
GET http://:api/api/workspaces/syrian-archive/source-tags

###
# Workspace data
###

# Fetch first page of data
GET http://:api/api/workspaces/syrian-archive/data

# Fetch another page of data
GET http://:api/api/workspaces/syrian-archive/data?page=2

###
# Segments
###

# Create a new segment
POST http://:api/api/workspaces/syrian-archive/segments
:headers

{
  "query": "Aleppo AND rebels",
  "title": "MF001A"
}

# List all segments for a workspace.
GET http://:api/api/workspaces/syrian-archive/segments

# Show the details of a segment
GET http://:api/api/workspaces/syrian-archive/segments/mf001a

# Delete a segment
DELETE http://:api/api/workspaces/syrian-archive/segments/mf001a

# Update an existing segment
PUT http://:api/api/workspaces/syrian-archive/segments/mf001a
:headers

{
  "query": "Aleppo OR rebels",
  "title": "MF001C"
}

###
# Processes
###

# List all processes for a workspace
GET http://:api/api/workspaces/syrian-archive/processes

###
# Methodologies
###

# Create a new methodology
POST http://:api/api/workspaces/syrian-archive/methodologies
:headers

{
  "description": "I'm a methodology, consisting of process and annotations.",
  "title": "Tutorial",
  "process": {}
}

# List all methodologies for a workspace.
GET http://:api/api/workspaces/syrian-archive/methodologies

# Show the details of a methodology
GET http://:api/api/workspaces/syrian-archive/methodologies/tutorial

###
# Investigations
###

# Create a new investigation
POST http://:api/api/workspaces/syrian-archive/investigations
:headers

{
  "title": "Hospital Attacks",
  "description": null,
  "methodology": "tutorial"
}

# List all investigations for a workspace.
GET http://:api/api/workspaces/syrian-archive/investigations

# Show the details of a methodology
GET http://:api/api/workspaces/syrian-archive/investigations/hospital-attacks

###
# Workspace stats
###

# Fetch total count for sources
GET http://:api/api/workspaces/syrian-archive/stats/sources/total

# Fetch count of source types
GET http://:api/api/workspaces/syrian-archive/stats/sources/types

# Fetch total count for data
GET http://:api/api/workspaces/syrian-archive/stats/data/total

# Fetch count for different sources of data
GET http://:api/api/workspaces/syrian-archive/stats/data/sources

# Fetch count of videos in database
GET http://:api/api/workspaces/syrian-archive/stats/data/videos

# Fetch count of segments
GET http://:api/api/workspaces/syrian-archive/stats/data/segments
